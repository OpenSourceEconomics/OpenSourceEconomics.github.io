

[
  
  
    
    
  
  
  
  {
    "title": "About",
    "excerpt": "\n",
    "content": "Steering committee\n\n\n  Philipp Eisenhauer: peisenha &lt;ät&gt; uni-bonn.de\n  Gregor Boehl: gboehl &lt;ät&gt; uni-bonn.de\n  Janos Gabler: janos.gabler &lt;ät&gt; gmail.com\n\n",
    "url": "/about/"
  },
  
  {
    "title": "Categories",
    "excerpt": "Category index\n",
    "content": "\n",
    "url": "/categories/"
  },
  
  {
    "title": "Events",
    "excerpt": "\n",
    "content": "We organize several events in support of our efforts.\n\nOSE meetup\n\nWe arrange monthly events which provide participants with an opportunity to present and learn about different software solutions, as well as to receive feedback on their current research projects. The events usually take place on the third Monday of every month at 6 p.m. at the Institute for Applied Microeconomics. Please see our website for details.\n\nOSE retreat\n\nWe host an annual retreat in support of our research activities. We organize the event around the research codes that are under active development in our group to facilitate a productive exchange of ideas. While participants were initially limited to economists, we hope to expand the event and include the broader mathematics and computational science community going forward. Please see our website for details.\n\nOSE primer\n\nWe organize a computation primer, which is essentially an introduction to (Python) programming. The course covers basic concepts such as variables, loops, functions, plotting, basics of scientific programming and data analysis, and some perspectives. The last iteration can be found here.\n\nDSE summer school\n\nWe are hosting the Econometric Society Summer Schools in Dynamic Structural Econometrics (DSE) in Bonn in 2021. It offers an annual short course in dynamic structural econometrics and computational methods more generally, paired with an associated two day conference in the same general area. DSE conference and summer school have a special theme that varies from year to year.\n",
    "url": "/events/"
  },
  
  {
    "title": "OpenSourceEconomics",
    "excerpt": "\n",
    "content": "A platform for transdisciplinary collaboration\n\nWe are a group of economists using computational models in the pursuit of our research. By adopting sound software engineering practices, we hope to leverage tools from computational science and increase the transparency and extensibility of our im­ple­men­ta­tions. In doing so, we expand the set of possible economic questions that we can address and improve the quality of our answers.\n\nWe provide numerous software libraries that we use in our research. We also host several events to facilitate the exchange of ideas with other economists. For example, we organize a monthly OSE meetup and an annual OSE retreat. In support of our educational activities, we maintain a curated list of resoures.\n\nTo learn more, visit us on GitHub or join us at Zulip.\n\n\n\nContact: info@open-econ.org or reach out on Zulip.\n\nSteering committee: Philipp Eisenhauer, Gregor Boehl, Janos Gabler\n",
    "url": "/"
  },
  
  {
    "title": "Infrastructure",
    "excerpt": "\n",
    "content": "We are developing the computational infrastructure in support of our initiative.\n\nOSE server\n\nOur group maintains a small virtual sever for teaching and prototyping purposes. We can utilize up to 12 Cores and 16GB of RAM, depending on resource allocation within the entire network at the time. The virtual server will either run on Xeon E7-8837 or Xeon E5-2699 based servers which the IT service group of the economics department maintains.\n",
    "url": "/infrastructure/"
  },
  
  {
    "title": "Resources",
    "excerpt": "\n",
    "content": "We now present some additional resources that turned out to be useful.\n\nInitiatives\n\nEcon-Ark\n\nThe Econ-ARK project provides open-source toolkits for researchers trying to understand how economic and social outcomes result from the actions of heterogeneous individuals. The primary goals of the project are to (1) make entry into the world of such modeling easy, (2) accelerate the development of this kind of modeling for policy-making and academic research, and (3) increase the openness, replicability, and interoperability of modeling tools. Econ-Ark is headed by Christopher D. Carroll, Professor of Economics at the Johns Hopkins University.\n\nQuantEcon\n\nQuantEcon is an initiative by Thomas J. Sargent and John Stachurski. It is very well suited for inexperienced programmers. Besides explaining some components of structural models in detailed and simple to follow tutorials, it also teaches the basics of Python and Julia.\n\nScientific Programming\n\nAnaconda Distribution\n\nThe open-source Anaconda Individual Edition is the easiest way to perform Python/R data science and machine learning on Linux, Windows, and Mac OS X. With over 19 million users worldwide, it is the industry standard for developing, testing, and training on a single machine.\n\nJupyter Lab\n\nJupyter Lab is a web-based interactive development environment for Jupyter notebooks, code, and data. JupyterLab is flexible: configure and arrange the user interface to support a wide range of workflows in data science, scientific computing, and machine learning. JupyterLab is extensible and modular: write plugins that add new components and integrate with existing ones.\n\nResources\n\n\n  \n    JupyterLab — A Next Gen Python Data Science IDE\n  \n  \n    JupyterLab: The Next Generation Jupyter Web Interface\n  \n  \n    Guide to R and Python in a Single Jupyter Notebook\n  \n\n\nVersion Control\n\nThe Introduction to Git and GitHub course on coursera offers a well rounded intro into version control using Git and GitHub. It will teach you all the fundamentals as well as more advanced features.\n\nThe GitKraken video tutorial series provides you with the knowledge needed to start using Git. It covers the absolute basics as well as advanced procedures involving Git. The course consists of 15 concise videos split into three difficulty levels, all of which can be watched in under an hour.\n\nSciPy\n\nSciPy is a Python-based ecosystem of open-source software for mathematics, science, and engineering. In particular, these are some of the core packages: numpy, scipy, matplotlib, and pandas.\n\nSciPy Lecture Notes\n\nThe Scipy lecture notes provide an excellent starting point for everyone interested in scientific programming in Python. They cover the main scientific packages of the Python ecosystem, namely numpy, scipy and matplotlib. Each chapter corresponds to a 1 to 2 hour course with the level of expertise increasing from beginner to expert.\n\nResources\n\n\n  \n    Pandas is for Everyone\n  \n  \n    Introduction to Numerical Computing with NumPy\n  \n  \n    Exploratory data analysis in Python\n  \n\n\nSoftware Carpentry\n\nSoftware Carpentry teaches researchers the computing skills they need to get more done in less time and with less pain. They have a lot of useful lessons on many different topics like Python and R programming or the Unix shell.\n\nstatsmodels\n\nstatsmodels is a Python module that provides classes and functions for the estimation of many different statistical models, as well as for conducting statistical tests, and statistical data exploration. An extensive list of result statistics are available for each estimator. The results are tested against existing statistical packages to ensure that they are correct.\n\nCheck out the online documentation.\n\nTextbooks\n\nRamalho, L. (2015). Fluent Python. Clear, concise, and effective programming. O’Reilly Media, Inc., Sebastopol, CA.\n\nRossant, C. (2018). IPython interactive computing and visualization cookbook. Packt Publishing, Birmingham, England.\n\nVanderPlas, J. (2016). Python data science handbook O’Reilly Media, Inc., Sebastopol, CA.\n",
    "url": "/resources/"
  },
  
  {
    "title": "Software",
    "excerpt": "\n",
    "content": "We maintain several software packages in support of our research and educational activities.\n\nrespy\n\nrespy is an open source framework written in Python for the simulation and estimation of some finite-horizon discrete choice dynamic programming models. The group of models which can be currently represented in respy are called Eckstein–Keane–Wolpin models.\n\nDocumentation respy.readthedocs.io\n\npydsge\n\npydsge is a Python package that allows to simulate, filter, and estimate DSGE models with occassionaly binding constraints. It allows to conduct full-blown Bayesian estimations (including Bayesian filtering) of macroeconomic models featuring an endogenous zero lower bound on nominal interest rates.\n\nDocumentation pydsge.readthedocs.io\n\nestimagic\n\nestimagic is a Python package that helps to build high-quality and user friendly implementations of (structural) econometric models. It is designed with large structural models in mind. However, it is also useful for any other estimator that numerically minimizes or maximizes a criterion function. Examples include maximum likelihood, generalized method of moments, method of simulated moments and indirect inference.\n\nDocumentation estimagic.readthedocs.io\n\nrobupy\n\nrobupy is an open-source Python package for finding worst-case probabilities in the context of robust decision making. It aims to collect algorithms, which find for different construction methods for the ambiguity set, the worst-case distribution as fast as possible.\n\nDocumentation robupy.readthedocs.io\n\neconsieve\n\neconsieve is a collection of nonlinear Bayesian filters, in particular for high dimensional models. The filters are implemented in python. It provides the Transposed-Ensemble Kalman Filter (TEnKF) for state and likelihood inference, and the nonlinear path-adjustment filter (NPAS) for exact smoothed states.\n\nDocumentation econsieve.readthedocs.io\n\neconsa\n\neconsa is an open-source package for economists that facilitates the sound analysis of computational economic models. It offers suitable methods for uncertainty propagation and global sensitivity analysis. Please visit our online documentation for details.\n\nDocumentation econsa.readthedocs.io\n\nruspy\n\nruspy is an open-source package for the simulation and estimation of a prototypical infinite-horizon dynamic discrete choice model based on Rust (1987).\n\nDocumentation ruspy.readthedocs.io\n\ngrmpy\n\ngrmpy is an open-source Python package for the simulation and estimation of the generalized Roy model. It serves as a teaching tool to promote the conceptual framework of the generalized Roy model, illustrate a variety of issues in the econometrics of policy evaluation, and showcases basic software engineering practices.\n\nDocumentation grmpy.readthedocs.io\n\ntemfpy\n\ntemfpy is an open-source package providing test models and functions for standard numerical components in computational economic models.\n\nDocumentation temfpy.readthedocs.io\n",
    "url": "/software/"
  }
  
]

